[tool.poetry]
# Docs: https://python-poetry.org/docs/pyproject/
name = "click-extra"
version = "4.1.0"
description = "ðŸŒˆ Extra colorization and configuration loading for Click."
license = 'GPL-2.0-or-later'
authors = ["Kevin Deldycke <kevin@deldycke.com>"]
readme = "readme.md"
homepage = 'https://github.com/kdeldycke/click-extra'
repository = 'https://github.com/kdeldycke/click-extra'
documentation = 'https://kdeldycke.github.io/click-extra'
keywords = [
    'ansi-colors',
    'cli',
    'cloup',
    'colorization',
    'configuration',
    'console',
    'ini',
    'json',
    'logging',
    'multiplatform',
    'pygments',
    'pytest',
    'python',
    'python-tabulate',
    'sphinx',
    'terminal',
    'toml',
    'xml',
    'yaml',
]
classifiers = [
    # See: https://pypi.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Environment :: Plugins',
    'Framework :: Pytest',
    'Framework :: Sphinx',
    'Framework :: Sphinx :: Extension',
    'Framework :: Sphinx :: Theme',
    'Intended Audience :: Developers',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Documentation :: Sphinx',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Software Development :: User Interfaces',
    'Topic :: System :: Logging',
    'Topic :: System :: Shells',
    'Topic :: Terminals',
    'Topic :: Text Processing :: Filters',
    'Topic :: Text Processing :: Markup :: HTML',
    'Topic :: Text Processing :: Markup :: Markdown',
    'Topic :: Text Processing :: Markup :: XML',
    'Topic :: Text Processing :: Markup :: reStructuredText',
    'Topic :: Utilities',
    'Typing :: Typed',
]

[tool.poetry.urls]
"Funding" = "https://github.com/sponsors/kdeldycke"
"Issues" = "https://github.com/kdeldycke/click-extra/issues"
"Changelog" = "https://kdeldycke.github.io/click-extra/changelog.html"

[tool.poetry.dependencies]
# List of python versions and their support status:
# https://en.wikipedia.org/wiki/History_of_Python#Support
python = "^3.8"
# XXX boltons.ecoutils 23.0.0 breaks PDB interactive sessions in pytest.
# Investigation of the root cause is being discussed upstream at:
# https://github.com/mahmoud/boltons/issues/334
boltons = "^23.0.0"
# Click 8.1 is the first version to support ``params=`` in ``@command``.
click = "^8.1"
cloup = "^2.0.0.post1"
commentjson = "^0.9.0"
furo = "^2023.03.27"
mergedeep = "^1.3.4"
# Pallets-Sphinx-Themes 2.1.0 is the first version rendering ``.. sourcecode:: shell-session`` code-blocks.
Pallets-Sphinx-Themes = "^2.1.0"
# Pygments 2.14.0 is the first version with ``lexers.algebra.GAPConsoleLexer`` that is referenced in our code.
pygments = "^2.14"
pygments-ansi-color = "^0.2.0"
pyyaml = "^6.0.0"
# regex is required for case-insensitive matches in Unicode.
# v2023.3.22 is the first to drop Python 3.7.
regex = "^2023.3.22"
# requests 2.28.2 is the first version to support charset_normalizer 3.x.
requests = "^2.28.2"
# Sphinx 6 is the first version to drop Python 3.7.
sphinx = "^6"
# tabulate 0.9 is the first to add `*grid` and `*outline` formats.
tabulate = { extras = ["widechars"], version = "^0.9" }
tomli = { version = "^2.0.1", python = "< 3.11" }
wcmatch = "^8.4.1"
xmltodict = "^0.13.0"

[tool.poetry.group.dev.dependencies]
bump2version = "^1.0.1"
coverage = { extras = ["toml"], version = "^7.2.3" }
mypy = "^1.2.0"
myst-parser = "^1.0.0"
pytest = "^7.3.1"
# More pytest plugins at: https://docs.pytest.org/en/latest/reference/plugin_list.html
pytest-cases = "^3.6.14"
pytest-cov = "^4.0.0"
pytest-httpserver = "^1.0.6"
pytest-randomly = "^3.12.0"
sphinx-autodoc-typehints = "^1.23.0"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.4.1"
sphinx-issues = "^3.0.1"
sphinxext-opengraph = "^0.7.5"
sphinxcontrib-mermaid = "^0.8.1"
types-Pygments = "^2.15.0.0"
types-PyYAML = "^6.0.12.9"
types-regex = "^2023.3.23.1"
types-requests = "^2.28.11.17"
types-tabulate = "^0.9.0.2"
types-xmltodict = "^0.13.0.2"

[tool.poetry.plugins."pygments.lexers"]
# The name of the entrypoint values doesnâ€™t really matter, Pygments extracts required metadata from the class definition.
# Source: https://pygments.org/docs/plugins/#defining-plugins-through-entrypoints
ansi-bash-session = "click_extra.pygments:AnsiBashSessionLexer"
ansi-dylan-console = "click_extra.pygments:AnsiDylanConsoleLexer"
ansi-elixir-console = "click_extra.pygments:AnsiElixirConsoleLexer"
ansi-erlang-shell = "click_extra.pygments:AnsiErlangShellLexer"
ansi-gap-console = "click_extra.pygments:AnsiGAPConsoleLexer"
ansi-julia-console = "click_extra.pygments:AnsiJuliaConsoleLexer"
ansi-matlab-session = "click_extra.pygments:AnsiMatlabSessionLexer"
ansi-msdos-session = "click_extra.pygments:AnsiMSDOSSessionLexer"
ansi-output = "click_extra.pygments:AnsiOutputLexer"
ansi-postgres-console = "click_extra.pygments:AnsiPostgresConsoleLexer"
ansi-power-shell-session = "click_extra.pygments:AnsiPowerShellSessionLexer"
ansi-psysh-console = "click_extra.pygments:AnsiPsyshConsoleLexer"
ansi-python-console = "click_extra.pygments:AnsiPythonConsoleLexer"
ansi-r-console = "click_extra.pygments:AnsiRConsoleLexer"
ansi-ruby-console = "click_extra.pygments:AnsiRubyConsoleLexer"
ansi-sqlite-console = "click_extra.pygments:AnsiSqliteConsoleLexer"
ansi-tcsh-session = "click_extra.pygments:AnsiTcshSessionLexer"

[tool.poetry.plugins."pygments.filters"]
ansi-filter = "click_extra.pygments:AnsiFilter"

[tool.poetry.plugins."pygments.formatters"]
ansi-html-formatter = "click_extra.pygments:AnsiHtmlFormatter"

[tool.poetry.plugins."pygments.styles"]
ansi-click-extra-furo-style = "click_extra.pygments:AnsiClickExtraFuroStyle"

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "boltons.*",
    "commentjson.*",
    "furo",
    "mergedeep.*",
    "pallets_sphinx_themes.*",
]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
# --cov-config=pyproject.toml : is specified at CLI level instead of letting coverage find it because of this bug:
#   https://github.com/nedbat/coveragepy/issues/512#issuecomment-399707938
#   https://github.com/pytest-dev/pytest-cov/issues/168#issuecomment-327533847
#   https://github.com/pytest-dev/pytest-cov/issues/243
addopts = "--durations=10 --cov-report=term --cov-report=xml --cov-config=pyproject.toml --cov=click_extra"
xfail_strict = true

# https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
[tool.coverage.report]
precision = 2

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
