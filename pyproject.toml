[tool.poetry]
# Docs: https://python-poetry.org/docs/pyproject/
name = "click-extra"
version = "4.8.2"
description = "ðŸŒˆ Extra colorization and configuration loading for Click."
license = 'GPL-2.0-or-later'
authors = ["Kevin Deldycke <kevin@deldycke.com>"]
readme = "readme.md"
homepage = 'https://github.com/kdeldycke/click-extra'
repository = 'https://github.com/kdeldycke/click-extra'
documentation = 'https://kdeldycke.github.io/click-extra'
keywords = [
    'ansi-colors',
    'cli',
    'cloup',
    'colorization',
    'configuration',
    'console',
    'ini',
    'json',
    'logging',
    'multiplatform',
    'pygments',
    'pytest',
    'python',
    'python-tabulate',
    'sphinx',
    'terminal',
    'toml',
    'xml',
    'yaml',
]
classifiers = [
    # See: https://pypi.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Environment :: Plugins',
    'Framework :: Pytest',
    'Framework :: Sphinx',
    'Framework :: Sphinx :: Extension',
    'Framework :: Sphinx :: Theme',
    'Intended Audience :: Developers',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Documentation :: Sphinx',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Software Development :: User Interfaces',
    'Topic :: System :: Logging',
    'Topic :: System :: Shells',
    'Topic :: Terminals',
    'Topic :: Text Processing :: Filters',
    'Topic :: Text Processing :: Markup :: HTML',
    'Topic :: Text Processing :: Markup :: Markdown',
    'Topic :: Text Processing :: Markup :: XML',
    'Topic :: Text Processing :: Markup :: reStructuredText',
    'Topic :: Utilities',
    'Typing :: Typed',
]

[tool.poetry.urls]
"Funding" = "https://github.com/sponsors/kdeldycke"
"Issues" = "https://github.com/kdeldycke/click-extra/issues"
"Changelog" = "https://kdeldycke.github.io/click-extra/changelog.html"

[tool.poetry.dependencies]
# Python versions and their status: https://devguide.python.org/versions/
python = "^3.8"
# XXX boltons.ecoutils 23.0.0 breaks PDB interactive sessions in pytest.
# Investigation of the root cause is being discussed upstream at:
# https://github.com/mahmoud/boltons/issues/334
boltons = "^24.0.0"
# Click 8.1.4 fix @group.command calls with a custom command_class. See:
# https://github.com/pallets/click/issues/2416
# https://github.com/pallets/click/pull/2417
click = "^8.1.4"
# Cloup 3.0.5 fix incompatibility with autodoc: https://github.com/janluke/cloup/issues/177
cloup = "^3.0.5"
commentjson = "^0.9.0"
mergedeep = "^1.3.4"
pyyaml = "^6.0.0"
# regex is required for case-insensitive matches in Unicode.
# v2023.3.22 is the first to drop Python 3.7.
regex = "^2024.4.16"
# requests 2.28.2 is the first version to support charset_normalizer 3.x.
requests = "^2.28.2"
# tabulate 0.9 is the first to add `*grid` and `*outline` formats.
tabulate = { version = "^0.9", extras = ["widechars"] }
tomli = { version = "^2.0.1", python = "< 3.11" }
wcmatch = "^8.5"
xmltodict = "^0.13.0"

### pygments extra group - optional dependencies
# Pygments 2.14.0 is the first version with ``lexers.algebra.GAPConsoleLexer`` that is referenced in our code.
pygments = { version = "^2.14", optional = true }
# pygments-ansi-color 0.3.0 is the first version to set the default theme of ANSI colors.
pygments-ansi-color = { version = "^0.3.0", optional = true }

### sphinx extra group - optional dependencies
# Pallets-Sphinx-Themes 2.1.1 is the first version removing old and conflicting Python 2 code.
Pallets-Sphinx-Themes = { version = "^2.1.1", optional = true }
# Sphinx 6 is the first version to drop Python 3.7.
sphinx = { version = ">=6", optional = true }

### pytest extra group - optional dependencies
pytest = { version = ">=8", optional = true }

[tool.poetry.extras]
pygments = ["pygments", "pygments-ansi-color"]
sphinx = ["pygments", "pygments-ansi-color", "Pallets-Sphinx-Themes", "sphinx"]
pytest = ["pytest"]

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage = { version = "^7.2.3", extras = ["toml"] }
# More pytest plugins at: https://docs.pytest.org/en/latest/reference/plugin_list.html
pytest-cases = "^3.8.3"
pytest-cov = "^5.0.0"
pytest-github-actions-annotate-failures = "^0.2.0"
pytest-httpserver = "^1.0.6"
pytest-randomly = "^3.12.0"

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.typing.dependencies]
types-Pygments = "^2.15.0.0"
types-PyYAML = "^6.0.12.9"
types-regex = "^2024.4.16.20240423"
types-requests = "^2.28.11.17"
types-tabulate = "^0.9.0.2"
types-xmltodict = "^0.13.0.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
furo = "^2024.1.29"
myst-parser = "^3.0.0"
sphinx-autodoc-typehints = "^2.0.0"
sphinx-copybutton = "^0.5.2"
# sphinx-design 0.5.0 is the first to allow Sphinx 7.
sphinx-design = "^0.5.0"
sphinx-issues = "^4.0.0"
sphinxext-opengraph = "^0.9.0"
sphinxcontrib-mermaid = "^0.9"

[tool.poetry.plugins."pygments.formatters"]
ansi-html-formatter = "click_extra.pygments:AnsiHtmlFormatter"

[tool.poetry.plugins."pygments.filters"]
ansi-filter = "click_extra.pygments:AnsiFilter"

[tool.poetry.plugins."pygments.lexers"]
# The name of the entrypoint value doesnâ€™t really matter, Pygments extracts required metadata from the class definition.
# Source: https://pygments.org/docs/plugins/#defining-plugins-through-entrypoints
ansi-bash-session = "click_extra.pygments:AnsiBashSessionLexer"
ansi-dylan-console = "click_extra.pygments:AnsiDylanConsoleLexer"
ansi-elixir-console = "click_extra.pygments:AnsiElixirConsoleLexer"
ansi-erlang-shell = "click_extra.pygments:AnsiErlangShellLexer"
ansi-gap-console = "click_extra.pygments:AnsiGAPConsoleLexer"
ansi-julia-console = "click_extra.pygments:AnsiJuliaConsoleLexer"
ansi-matlab-session = "click_extra.pygments:AnsiMatlabSessionLexer"
ansi-msdos-session = "click_extra.pygments:AnsiMSDOSSessionLexer"
ansi-output = "click_extra.pygments:AnsiOutputLexer"
ansi-postgres-console = "click_extra.pygments:AnsiPostgresConsoleLexer"
ansi-power-shell-session = "click_extra.pygments:AnsiPowerShellSessionLexer"
ansi-psysh-console = "click_extra.pygments:AnsiPsyshConsoleLexer"
ansi-python-console = "click_extra.pygments:AnsiPythonConsoleLexer"
ansi-r-console = "click_extra.pygments:AnsiRConsoleLexer"
ansi-ruby-console = "click_extra.pygments:AnsiRubyConsoleLexer"
ansi-sqlite-console = "click_extra.pygments:AnsiSqliteConsoleLexer"
ansi-tcsh-session = "click_extra.pygments:AnsiTcshSessionLexer"

[project.entry-points.pytest11]
# Make additional fixtures available to pytest.
# See: https://docs.pytest.org/en/latest/how-to/writing_plugins.html#making-your-plugin-installable-by-others
click-extra = "click_extra.pytest"

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "boltons.*",
    "commentjson.*",
    "furo",
    "mergedeep.*",
    "pallets_sphinx_themes.*",
]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
addopts = [
    "--durations=10",
    "--cov-report=term",
    "--cov-report=xml",
    # --cov-config=pyproject.toml : is specified at CLI level instead of letting coverage find it because of this bug:
    #   https://github.com/nedbat/coveragepy/issues/512#issuecomment-399707938
    #   https://github.com/pytest-dev/pytest-cov/issues/168#issuecomment-327533847
    #   https://github.com/pytest-dev/pytest-cov/issues/243
    "--cov-config=pyproject.toml",
    "--cov=click_extra",
    # See: https://docs.pytest.org/en/latest/explanation/goodpractices.html#tests-outside-application-code
    "--import-mode=importlib",
]
# Make sure tests that are expected to fail do not resurect and start working all of a sudden.
xfail_strict = true

# https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
[tool.coverage.report]
precision = 2

[tool.bumpversion]
current_version = "4.8.2"
allow_dirty = true

[[tool.bumpversion.files]]
# Update Python package version in any __init__.py file.
glob = "./**/__init__.py"
ignore_missing_version = true

[[tool.bumpversion.files]]
# Update version in Poetry section.
filename = "./pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
# Update the version in standard Markdown changelog.
filename = "./changelog.md"
search = "## [{current_version} (unreleased)]("
replace = "## [{new_version} (unreleased)]("

[[tool.bumpversion.files]]
# Update the version in the citation file.
filename = "./citation.cff"
search = "version: {current_version}"
replace = "version: {new_version}"

[[tool.bumpversion.files]]
# Update the release date in the citation file.
filename = "./citation.cff"
regex = true
search = "date-released: \\d{{4}}-\\d{{2}}-\\d{{2}}"
replace = "date-released: {utcnow:%Y-%m-%d}"

[tool.typos]
default.extend-ignore-identifiers-re = [
    # error: `PASE` should be `PASS`, `PACE`, `PARSE`
    #   --> ./click_extra/platforms.py:416:8
    #     |
    # 416 |     - `PASE`
    #     |        ^^^^
    #     |
    "PASE",
    # error: `Uper` should be `Super`, `Upper`
    #   --> ./click_extra/tests/test_parameters.py:132:19
    #     |
    # 132 |                 "sUper",
    #     |                   ^^^^
    #     |
    "sUper",
    # error: `Als` should be `Also`
    #   --> ./click_extra/tests/test_parameters.py:198:11
    #     |
    # 198 |         "fAlsE": False,
    #     |           ^^^
    #     |
    "fAlsE",
    # error: `mey` should be `may`
    #   --> ./click_extra/tests/test_colorize.py:712:22
    #     |
    # 712 |             "H\x1b[32mey\x1b[0m-xx-xxx-\x1b[32mhe\x1b[0mY-xXxXxxxxx-\x1b[32mhey\x1b[0m",
    #     |                      ^^^
    #     |
    "mey",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
