---
name: Tests
"on":
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Run tests every Monday at 9:17 to catch regressions.
    - cron: "17 9 * * 1"

# XXX Concurrency detection sucks and jobs gets killed randonmly.
# concurrency:
#   # Group workflow jobs so new commits cancels in-progress execution triggered by previous commits.
#   # Source: https://mail.python.org/archives/list/pypa-committers@python.org/thread/PCBCQMJF64JGRBOX7E2EE4YLKHT4DI55/
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
#   cancel-in-progress: true

jobs:

  test-matrix:
    # There is no way to selective flags collections of elements in a matrix, without having to flag all combinations.
    # This will became unmaintainable and tedious so we use this job to pre-compute which jobs is going to get our
    # "stable" flag.
    name: "OS/Python/stable matrix pre-compute"
    runs-on: ubuntu-22.04
    outputs:
      test_matrix: ${{ steps.create_matrix.outputs.matrix }}
    steps:
      - name: Create JSON matrix
        id: create_matrix
        shell: python
        run: |
          import json
          import os
          from itertools import combinations, product
          from pathlib import Path

          # See what each os came pre-installed with at:
          # https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners
          os_list = {
              "ubuntu-22.04",
              "ubuntu-20.04",
              "macos-12",
              "macos-11",
              "windows-2022",
              "windows-2019",
          }
          python_list = {
              "3.8",
              "3.9",
              "3.10",
              "3.11",
              "3.12-dev",
          }
          click_list = {
              "pinned",
              "8.1.x",
              "main",
          }
          cloup_list = {
              "pinned",
              "master",
          }

          sets = (os_list, python_list, click_list, cloup_list)

          # Safety check to ensure there is no overlap between sets.
          for set_1, set_2 in combinations(sets, 2):
              assert not set_1.intersection(set_2)

          # List of unstable criterions.
          unstable = []

          jobs = []
          for os_id, python_version, click_version, cloup_version in product(*sets):
              job = {
                  "os": os_id,
                  "python-version": python_version,
                  "click-version": click_version,
                  "cloup-version": cloup_version,
                  "state": "stable",
              }
              for criterion in unstable:
                  if criterion.issubset(job.values()):
                      job["state"] = "unstable"
                      break
              jobs.append(job)
          matrix = json.dumps({"include": jobs})

          env_file = Path(os.getenv("GITHUB_OUTPUT"))
          env_file.write_text(f"matrix={matrix}")

      - name: Print JSON matrix
        run: |
          echo '${{ steps.create_matrix.outputs.matrix }}'
          jq -aR <<< echo '${{ steps.create_matrix.outputs.matrix }}'

  tests:
    needs:
      - test-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.test-matrix.outputs.test_matrix) }}
    runs-on: ${{ matrix.os }}
    # We keep going when a job flagged as not stable fails.
    continue-on-error: ${{ matrix.state == 'unstable' }}
    steps:
      - uses: actions/checkout@v3.5.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install click-extra and its dependencies
        run: |
          python -m pip install --upgrade setuptools pip
          python -m pip install --upgrade poetry
          poetry install --no-interaction --no-ansi

      - name: Install click@${{ matrix.click-version }}
        if: matrix.click-version != 'pinned'
        run: |
          poetry add git+https://github.com/pallets/click.git#${{ matrix.click-version }}

      - name: Install cloup@${{ matrix.cloup-version }}
        if: matrix.cloup-version != 'pinned'
        run: |
          poetry add git+https://github.com/janluke/cloup.git#${{ matrix.cloup-version }}

      - name: Tests
        run: |
          poetry run pytest

      - name: Codecov upload
        uses: codecov/codecov-action@v3.1.3
